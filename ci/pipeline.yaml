groups:
# - name: experimentation
#   jobs: 
#   - test-pr
#   - release
#   - create-pr


resource_types:
# https://github.com/cloudfoundry-community/slack-notification-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: pull-request-test
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: test

resources:
# Code for all Fission Functions
- name: fission-function-src
  type: git
  source:
    uri: git@github.com:OpenIndustryCloud/fission-go-form-req-transformer.git
    branch: master
    disable_ci_skip: true
    private_key: ((gh-ssh-key))
# Code for CI unitasks 
- name: oic-ci-tasks-src
  type: git
  source:
    uri: git@github.com:OpenIndustryCloud/oic-ci-tasks
    branch: master
    disable_ci_skip: true
    private_key: ((gh-ssh-key))
# Slack Definitions
- name: slack-alert-infra
  type: slack-notification
  source:
    url: ((slack-url-infra))
- name: slack-alert-buildbot
  type: slack-notification
  source:
    url: ((slack-url-buildbot))
# Docker Images
- name: docker-image-fission-cli
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-fission-cli))
- name: docker-image-newman
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-newman))
- name: docker-image-go-ci
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-go-ci))
- name: docker-image-go-builder
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-go-builder))
# Pull Requests
- name: fission-function-pr
  type: pull-request
  source:
    access_token: ((gh-access-token))
    private_key: ((gh-ssh-key))
    repo: OpenIndustryCloud/fission-go-form-req-transformer
    base: master
- name: fission-function-merge-pr
  type: pull-request-test
  source:
    access_token: ((gh-access-token))
    private_key: ((gh-ssh-key))
    base: test-merge
    repo: OpenIndustryCloud/fission-go-form-req-transformer

jobs:
#####################################################################
#
# Test PR Management
#
#####################################################################
- name: staging-test
  public: true
  plan:
  - aggregate:
    - get: docker-image-fission-cli
    - get: docker-image-newman
    - get: docker-image-go-ci
    - get: docker-image-go-builder
  - get: fission-function-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: coverage
    image: docker-image-go-ci
    file: oic-ci-tasks-src/go/coverage/coverage.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-function-src
    params:
      REPOTOKEN: ((go-form-req-transformer-token))
  - task: build
    image: docker-image-go-builder
    file: oic-ci-tasks-src/function/build/build_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-function-src
    params:
      FUNCTION_ENVIRONMENT: go
      FUNCTION_NAME: form-req-transformer
      CODE_PATH: function-src/form-req-transformer.go
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: form-req-transformer
      FUNCTION_ENVIRONMENT: go
      CODE_PATH: function-src/form-req-transformer.so
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: built-artifacts
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-function-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      COLLECTION: function-src/ci/collection.json
      FUNCTION_NAME: form-req-transformer
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: POST
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: form-req-transformer
      FUNCTION_ENVIRONMENT: go
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-function-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

- name: create-pr
  public: true
  plan:
  - aggregate:
    - get: fission-function-src
      trigger: true
      passed: [ "staging-test" ]
    - get: oic-ci-tasks-src
  - task: create-pr
    file: oic-ci-tasks-src/git/create_pr/create_pr.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
    params:
      GITHUB_ACCESS_TOKEN: ((gh-access-token))
      REPO_NAME: OpenIndustryCloud/fission-go-form-req-transformer
      BASE_BRANCH: test-merge

- name: merge-pr
  plan:
  - get: fission-function-src
    passed: [ 'create-pr' ]
  - get: fission-function-merge-pr
    trigger: true
  - put: fission-function-merge-pr
    params:
      path: fission-function-merge-pr
      status: success
      merge:
        method: merge
        commit_msg: fission-function-merge-pr/LAST_MERGE.md

- name: test-pr
  plan:
  - get: fission-function-pr
    trigger: true
    version: every
  - get: docker-image-go-ci
  - get: oic-ci-tasks-src
  - task: coverage
    image: docker-image-go-ci
    file: oic-ci-tasks-src/go/coverage/coverage.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-function-pr
    params:
      REPOTOKEN: ((go-form-req-transformer-token))
    on_success:
      put: fission-function-pr
      params:
        path: fission-function-pr
        status: success
    on_failure:
      put: fission-function-pr
      params:
        path: fission-function-pr
        status: failure

- name: release
  plan:
  - get: fission-function-src
    passed: [ 'merge-pr' ]
  - task: next-tag
    config:
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      platform: linux
      inputs:
      - name: fission-function-src
      outputs:
      - name: tag
      run:
        path: bash
        args:
          - -c
          - |
            set -eux
            [ -d "tag" ] && mkdir -p tag
            echo v > tag/prefix
            pushd fission-function-src
              # git tag -l | sed -e "s/v//" | sort -n | tail -n 1 | xargs -n 1 expr 1 + | tee ../tag/name
              if [ "x$(git tag -l)" = "x" ]; then 
                echo 1 | tee ../tag/name 
              else 
                git tag -l | sed -e "s/v//" | sort -n | tail -n 1 | xargs -n 1 expr 1 + | tee ../tag/name
              fi
            popd
  - put: fission-function-src
    params:
      repository: fission-function-src
      only_tag: true
      tag: tag/name
      tag_prefix: v

